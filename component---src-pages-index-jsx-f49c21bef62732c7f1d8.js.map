{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./src/components/SEO/SEO.jsx"],"names":["Index","render","postEdges","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","location","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_6___default","siteTitle","rel","href","siteUrl","_components_SEO_SEO__WEBPACK_IMPORTED_MODULE_5__","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_4__","Component","pageQuery","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","match","length","first","shift","replace","i","component","TypeError","push","str","join","parts","split","arguments","slice","call","module","exports","__webpack_require__","SEO","title","description","image","postURL","_this$props","postNode","postPath","postSEO","postMeta","frontmatter","excerpt","cover","url_join__WEBPACK_IMPORTED_MODULE_3___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_4___default","pathPrefix","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","@context","@type","url","name","alternateName","siteTitleAlt","itemListElement","position","item","@id","headline","content","type","JSON","stringify","property","siteFBAppID","userTwitter","react__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","f"],"mappings":"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","file":"component---src-pages-index-jsx-f49c21bef62732c7f1d8.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nclass Index extends React.Component {\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout location={this.props.location}>\n        <div className=\"index-container\">\n          <Helmet>\n            <title>{config.siteTitle}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}`} />\n          </Helmet>\n          <SEO postEdges={postEdges} />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      ]);\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}