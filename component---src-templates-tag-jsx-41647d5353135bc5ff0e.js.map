{"version":3,"sources":["webpack:///./src/templates/tag.jsx"],"names":["TagTemplate","render","tag","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","location","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_5___default","siteTitle","rel","href","siteUrl","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_4__","Component","pageQuery"],"mappings":"0QAOqBA,4FACnBC,kBAAS,IACCC,EAAQC,KAAKC,MAAMC,YAAnBH,IACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MAEpD,OACEC,EAAAC,EAAAC,cAACC,EAAAF,GAAOG,SAAUX,KAAKC,MAAMU,UAC3BJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,KACED,EAAAC,EAAAC,cAAA,iCAA4BV,EAA5B,OAAsCe,EAAAN,EAAOO,WAC7CR,EAAAC,EAAAC,cAAA,QAAMO,IAAI,YAAYC,KAASH,EAAAN,EAAOU,QAAhB,SAAgCnB,KAExDQ,EAAAC,EAAAC,cAACU,EAAAX,GAAYL,UAAWA,SAZbN,CAAoBU,EAAAC,EAAMY,WAmBlCC","file":"component---src-templates-tag-jsx-41647d5353135bc5ff0e.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class TagTemplate extends React.Component {\n  render() {\n    const { tag } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location}>\n        <div className=\"tag-container\">\n          <Helmet>\n            <title>{`Posts tagged as \"${tag}\" | ${config.siteTitle}`}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}/tags/${tag}`} />\n          </Helmet>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}